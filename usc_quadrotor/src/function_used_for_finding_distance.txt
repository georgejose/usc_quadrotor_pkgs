int* getAllclosedQuadrocopter(Quadrocopter* Q, double distanceBoundary){
		double x1 = getX();
		double y1 = getY();
		double z1 = getZ();		
		double distance;
		std::vector<int> closedQuadrocopter;
		for(int i=0; i< NUM_OF_QUAD; i++){
			distance = euclideanDistance(x1 - Q[i].getX(), y1 - Q[i].getY(), z1 - Q[i].getZ());
			if(distance != 0.0 && distance <= distanceBoundary){
				closedQuadrocopter.push_back(i);
			}
		}
		return closedQuadrocopter.data();
	}
	double getX(){
		return int_marker.pose.position.x;
	}
	double getY(){
		return int_marker.pose.position.x;
	}
	double getZ(){
		return int_marker.pose.position.x;
	}


double euclideanDistance(double diff_x, double diff_y, double diff_z){
	double distance;
	distance = pow(diff_x,2) + pow(diff_y,2) + pow(diff_z,2);
	distance = sqrt(distance);

	return distance;
}
